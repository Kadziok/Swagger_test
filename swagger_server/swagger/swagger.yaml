---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "Swagger Petstore"
  license:
    name: "MIT"
host: "localhost:8080"
basePath: "/v1"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /pet:
    post:
      tags:
      - "pet"
      summary: "Create a pet"
      operationId: "create_pet"
      parameters:
      - in: "body"
        name: "body"
        description: "Pet object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Pet"
      responses:
        "201":
          description: "Null response"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.pet_controller"
  /pets:
    get:
      tags:
      - "pets"
      summary: "List all pets"
      operationId: "list_pets"
      parameters:
      - name: "limit"
        in: "query"
        description: "How many items to return at one time (max 100)"
        required: false
        type: "integer"
        format: "int32"
      responses:
        "200":
          description: "A paged array of pets"
          headers:
            x-next:
              type: "string"
              description: "A link to the next page of responses"
          schema:
            $ref: "#/definitions/Pets"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.pets_controller"
    post:
      tags:
      - "pets"
      summary: "Create a pet"
      operationId: "create_pets"
      parameters: []
      responses:
        "201":
          description: "Null response"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.pets_controller"
  /pets/{petId}:
    get:
      tags:
      - "pets"
      summary: "Info for a specific pet"
      operationId: "show_pet_by_id"
      parameters:
      - name: "petId"
        in: "path"
        description: "The id of the pet to retrieve"
        required: true
        type: "string"
      responses:
        "200":
          description: "Expected response to a valid request"
          schema:
            $ref: "#/definitions/Pets"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.pets_controller"
definitions:
  Pet:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      tag:
        type: "string"
    example:
      name: "name"
      id: 0
      tag: "tag"
  Pets:
    type: "array"
    items:
      $ref: "#/definitions/Pet"
  Error:
    type: "object"
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
